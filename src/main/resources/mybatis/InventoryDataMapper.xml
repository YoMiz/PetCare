<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.app.mapper.InventoryMapper">
	<select id="showInventory"
		resultType="com.example.app.domain.InventoryData">
		SELECT * FROM pet_care_db.inventory
	</select>
	<select id="showInventoryForPet"
		resultType="com.example.app.domain.InventoryData">
		SELECT *
		FROM pet_care_db.inventory
		JOIN
		pet_care_db.inventory_type
		ON inventory.inventory_type =
		inventory_type.inventory_type_id
		JOIN
		pet_care_db.pet_inventory
		ON
		inventory.inventory_id =
		pet_inventory.inventory_id
		WHERE pet_id =
		#{petId}
	</select>
	<select id="getInventoryByInventoryId"
		resultType="com.example.app.domain.InventoryData">
		SELECT *
		FROM inventory
		JOIN inventory_type
		ON inventory.inventory_type =
		inventory_type.inventory_type_id
		WHERE inventory.inventory_id = #{inventoryId}
	</select>
	<insert id="addInventory"
		parameterType="com.example.app.domain.InventoryData"
		useGeneratedKeys="true" keyProperty="inventoryId">
		INSERT INTO pet_care_db.inventory
		(user_id, inventory_type, inventory_name,
		inventory_amount,
		inventory_price, inventory_url)
		VALUE
		(#{userId}, #{inventoryType},
		#{inventoryName}, #{inventoryAmount},
		#{inventoryPrice},
		#{inventoryUrl})
	</insert>
	<insert id="addPetInventory"
		parameterType="com.example.app.domain.InventoryData">
		INSERT INTO pet_care_db.pet_inventory(user_id, pet_id,
		inventory_id)
		VALUE (#{userId}, #{petId}, #{inventoryId})
	</insert>
	<select id="showPetByInventoryId" parameterType="Integer">
		SELECT * FROM
		pet_care_db.pet_inventory WHERE inventory_id = #{inventoryId}
	</select>

	<update id="updateInventory" parameterType="Integer">
		UPDATE
		pet_care_db.inventory (inventory_type, inventory_name,
		inventory_amount, inventory_price)
		VALUE (#{inventoryType},
		#{inventoryName},#{inventoryAmount},#{inventoryPrice}) WHERE
		inventory.inventory_id = #{inventoryId}
	</update>
	<select id="findPetInventoryByUserId" parameterType="Integer">
		SELECT CASE
		WHEN COUNT(*) > 0 THEN 'true' ELSE 'false' END
		FROM pet_inventory
		WHERE
		user_id = #{userId}
	</select>
	<select id="findPetInventoryByPetId" parameterType="Integer">
		SELECT CASE
		WHEN COUNT(*) > 0 THEN 'true' ELSE 'false' END
		FROM
		pet_inventory
		WHERE
		pet_id = #{petId}
	</select>
	<select id="inventoryPetCheckList"
		resultType="com.example.app.domain.InventoryData">
		SELECT * FROM pet_inventory JOIN inventory ON
		pet_inventory.inventory_id =
		inventory.inventory_id WHERE
		pet_inventory.inventory_id =
		#{inventoryId}
	</select>


</mapper>
